openapi: 3.0.3
info:
  title: Simple Store API
  version: 1.0.0
  description: API for user registration, login, product management, and purchases

servers:
  - url: http://localhost:8080/api

paths:
  /user/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, role, password, email]
              properties:
                name:
                  type: string
                role:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: Bad Request (incomplete data or duplicate email)
        '500':
          description: Internal Server Error

  /user/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad Request (incomplete data or other errors)
        '401':
          description: Unauthorized (wrong password)
        '404':
          description: User not found
        '500':
          description: Internal Server Error

  /user:
    get:
      summary: Get all users (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        role:
                          type: string
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /product:
    post:
      summary: Add a new product (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, price]
              properties:
                name:
                  type: string
                price:
                  type: number
      responses:
        '200':
          description: Product added successfully
        '400':
          description: Bad Request (missing fields, price is 0, or product exists)
        '500':
          description: Internal Server Error

  /purchase:
    post:
      summary: Purchase a product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [productId]
              properties:
                productId:
                  type: integer
      responses:
        '200':
          description: Purchase completed
        '400':
          description: Bad Request
        '404':
          description: User or Product not found
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
